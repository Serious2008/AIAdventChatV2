import { Client } from '@modelcontextprotocol/sdk/client/index.js';
import { StdioClientTransport } from '@modelcontextprotocol/sdk/client/stdio.js';

const transport = new StdioClientTransport({
  command: 'node',
  args: ['/Users/sergeymarkov/Documents/PetProject/AIAdventChatV2/mcp-ios-simulator-server/build/index.js']
});

const client = new Client({
  name: 'test-client',
  version: '1.0.0'
}, {
  capabilities: {}
});

try {
  console.log('üîå –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ MCP —Å–µ—Ä–≤–µ—Ä—É...');
  await client.connect(transport);
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MCP —Å–µ—Ä–≤–µ—Ä—É\n');

  // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º —Å–ø–∏—Å–æ–∫ —Å–∏–º—É–ª—è—Ç–æ—Ä–æ–≤
  console.log('üì± –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —Å–∏–º—É–ª—è—Ç–æ—Ä–æ–≤...');
  const simulators = await client.callTool({
    name: 'list_simulators',
    arguments: {}
  });
  console.log('–°–∏–º—É–ª—è—Ç–æ—Ä—ã:');
  console.log(JSON.stringify(simulators, null, 2));
  console.log('\n');

  // –¢–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ–º list_apps –¥–ª—è iPhone 15 Pro
  console.log('üìã –í—ã–∑—ã–≤–∞—é list_apps –¥–ª—è iPhone 15 Pro...');
  const result = await client.callTool({
    name: 'list_apps',
    arguments: {
      simulator: 'iPhone 15 Pro'
    }
  });

  console.log('\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç list_apps:');
  console.log(JSON.stringify(result, null, 2));

  await client.close();
  console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  console.error(error);
  process.exit(1);
}
