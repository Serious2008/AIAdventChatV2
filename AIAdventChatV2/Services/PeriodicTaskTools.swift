import Foundation

/// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏
class PeriodicTaskToolsProvider {
    /// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    static func getTools() -> [ClaudeTool] {
        return [
            getStartWeatherUpdatesTool(),
            getStopWeatherUpdatesTool(),
            getListActiveTasksTool()
        ]
    }

    /// –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–≥–æ–¥—ã
    private static func getStartWeatherUpdatesTool() -> ClaudeTool {
        return ClaudeTool(
            name: "start_weather_updates",
            description: """
            –ù–∞—á–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞.
            –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç:
            - "–ü–∏—à–∏ –º–Ω–µ –ø–æ–≥–æ–¥—É –∫–∞–∂–¥—ã–π —á–∞—Å"
            - "–ü—Ä–∏—Å—ã–ª–∞–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —Ä–∞–∑ –≤ —á–∞—Å"
            - "–•–æ—á—É –ø–æ–ª—É—á–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ú–æ—Å–∫–≤–µ –∫–∞–∂–¥—ã–π —á–∞—Å"
            - "–ü–æ–≤—Ç–æ—Ä—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –∫–∞–∂–¥—ã–π —á–∞—Å"

            –ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
            –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –≤ —á–∞—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º.
            """,
            properties: [
                "city": ClaudeTool.InputSchema.Property(
                    type: "string",
                    description: "–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, London)"
                ),
                "interval_minutes": ClaudeTool.InputSchema.Property(
                    type: "string",
                    description: "–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ –º–∏–Ω—É—Ç–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä: 60 –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∫–∞–∂–¥—ã–π —á–∞—Å, 30 –¥–ª—è –∫–∞–∂–¥—ã–µ –ø–æ–ª—á–∞—Å–∞"
                )
            ],
            required: ["city", "interval_minutes"]
        )
    }

    /// –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–≥–æ–¥—ã
    private static func getStopWeatherUpdatesTool() -> ClaudeTool {
        return ClaudeTool(
            name: "stop_weather_updates",
            description: """
            –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã.
            –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç:
            - "–û—Å—Ç–∞–Ω–æ–≤–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã"
            - "–ë–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏—Å—ã–ª–∞–π –ø–æ–≥–æ–¥—É"
            - "–û—Ç–∫–ª—é—á–∏ –ø–æ–≥–æ–¥–Ω—ã–π –∞–≥–µ–Ω—Ç"
            """,
            properties: [:],
            required: nil
        )
    }

    /// –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
    private static func getListActiveTasksTool() -> ClaudeTool {
        return ClaudeTool(
            name: "list_active_tasks",
            description: """
            –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á.
            –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç:
            - "–ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –∑–∞–ø—É—â–µ–Ω—ã?"
            - "–ü–æ–∫–∞–∂–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã"
            - "–ß—Ç–æ —É –º–µ–Ω—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏?"
            """,
            properties: [:],
            required: nil
        )
    }

    /// –í—ã–ø–æ–ª–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
    static func executeTool(
        name: String,
        input: [String: Any],
        periodicTaskService: PeriodicTaskService
    ) -> String {
        print("üîß PeriodicTaskTools.executeTool –≤—ã–∑–≤–∞–Ω —Å name: '\(name)'")
        print("üìä –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: \(input)")

        switch name {
        case "start_weather_updates":
            print("‚ñ∂Ô∏è –í—ã–∑—ã–≤–∞—é start_weather_updates")
            return executeStartWeatherUpdates(input: input, service: periodicTaskService)

        case "stop_weather_updates":
            print("‚èπÔ∏è –í—ã–∑—ã–≤–∞—é stop_weather_updates")
            return executeStopWeatherUpdates(service: periodicTaskService)

        case "list_active_tasks":
            print("üìã –í—ã–∑—ã–≤–∞—é list_active_tasks")
            return executeListActiveTasks(service: periodicTaskService)

        default:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∏–º—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞: '\(name)'")
            return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: \(name)"
        }
    }

    // MARK: - Tool Execution

    private static func executeStartWeatherUpdates(
        input: [String: Any],
        service: PeriodicTaskService
    ) -> String {
        guard let city = input["city"] as? String else {
            return "‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä 'city' –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"
        }

        guard let intervalStr = input["interval_minutes"] as? String,
              let intervalMinutes = Int(intervalStr) else {
            return "‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä 'interval_minutes' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º"
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—É–º–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
        if intervalMinutes < 1 {
            return "‚ùå –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 –º–∏–Ω—É—Ç—ã"
        }

        if intervalMinutes > 1440 { // 24 —á–∞—Å–∞
            return "‚ùå –ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 1440 –º–∏–Ω—É—Ç (24 —á–∞—Å–∞)"
        }

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –ø–æ–≥–æ–¥—ã –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–π
        let existingWeatherTasks = service.activeTasks.filter {
            $0.isActive && $0.action == "get_weather_summary"
        }

        if !existingWeatherTasks.isEmpty {
            print("üõë –ù–∞–π–¥–µ–Ω–æ \(existingWeatherTasks.count) —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞—á –ø–æ–≥–æ–¥—ã, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...")
            for task in existingWeatherTasks {
                print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—Ç–∞—Ä—É—é –∑–∞–¥–∞—á—É –¥–ª—è –≥–æ—Ä–æ–¥–∞: \(task.parameters["city"] ?? "Unknown")")
                service.stopTask(id: task.id)
            }
        }

        // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
        let taskId = service.createTask(
            action: "get_weather_summary",
            parameters: ["city": city],
            intervalMinutes: intervalMinutes
        )

        let intervalDescription: String
        if intervalMinutes == 60 {
            intervalDescription = "–∫–∞–∂–¥—ã–π —á–∞—Å"
        } else if intervalMinutes < 60 {
            intervalDescription = "–∫–∞–∂–¥—ã–µ \(intervalMinutes) –º–∏–Ω—É—Ç"
        } else {
            let hours = intervalMinutes / 60
            intervalDescription = "–∫–∞–∂–¥—ã–µ \(hours) —á–∞—Å–∞"
        }

        var resultMessage = ""

        // –ï—Å–ª–∏ –±—ã–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –∑–∞–¥–∞—á–∏, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        if !existingWeatherTasks.isEmpty {
            let stoppedCities = existingWeatherTasks.map { $0.parameters["city"] ?? "Unknown" }.joined(separator: ", ")
            resultMessage += "üõë –û—Å—Ç–∞–Ω–æ–≤–∏–ª –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –¥–ª—è: \(stoppedCities)\n\n"
        }

        resultMessage += """
        ‚úÖ –ó–∞–ø—É—Å—Ç–∏–ª –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã!

        üìç –ì–æ—Ä–æ–¥: \(city)
        ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: \(intervalDescription)
        üÜî ID –∑–∞–¥–∞—á–∏: \(taskId)

        –ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—é –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∞ –∑–∞—Ç–µ–º –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
        """

        return resultMessage
    }

    private static func executeStopWeatherUpdates(
        service: PeriodicTaskService
    ) -> String {
        print("üõë executeStopWeatherUpdates –≤—ã–∑–≤–∞–Ω")
        print("üìä –í—Å–µ–≥–æ –∑–∞–¥–∞—á: \(service.activeTasks.count)")

        let activeTasks = service.activeTasks.filter { $0.isActive }
        print("üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: \(activeTasks.count)")

        if activeTasks.isEmpty {
            return "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
        }

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
        print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é \(activeTasks.count) –∑–∞–¥–∞—á...")
        for task in activeTasks {
            print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–¥–∞—á—É: \(task.id) - \(task.action)")
            service.stopTask(id: task.id)
        }

        print("‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

        return """
        ‚úÖ –û—Å—Ç–∞–Ω–æ–≤–∏–ª –≤—Å–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã (\(activeTasks.count) –∑–∞–¥–∞—á)

        –ë–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
        """
    }

    private static func executeListActiveTasks(
        service: PeriodicTaskService
    ) -> String {
        let activeTasks = service.activeTasks.filter { $0.isActive }

        if activeTasks.isEmpty {
            return "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á"
        }

        var result = "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏:\n\n"

        for task in activeTasks {
            let city = task.parameters["city"] ?? "Unknown"
            let intervalDescription: String
            if task.intervalMinutes == 60 {
                intervalDescription = "–∫–∞–∂–¥—ã–π —á–∞—Å"
            } else if task.intervalMinutes < 60 {
                intervalDescription = "–∫–∞–∂–¥—ã–µ \(task.intervalMinutes) –º–∏–Ω—É—Ç"
            } else {
                let hours = task.intervalMinutes / 60
                intervalDescription = "–∫–∞–∂–¥—ã–µ \(hours) —á–∞—Å–∞"
            }

            result += """
            üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ \(city)
            ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: \(intervalDescription)
            üìä –í—ã–ø–æ–ª–Ω–µ–Ω–æ —Ä–∞–∑: \(task.executionCount)
            üÜî ID: \(task.id)

            """
        }

        return result
    }
}
